import sys
sys.stdin = open('input.txt')


# 정수를 입력 받는다.
N = int(input())
# 369 게임은 1부터 시작하므로 범위를 설정한다.
# 1부터 N+1 번째 까지의 수가 출력되어야한다.
for number in range(1, N+1):
    # print(number)    # => 1, 2, 3, ... 10
    '''
        숫자가 3, 6, 9인경우는 문제되지 않음
        단순히 number == '3' or number == '6' or number == '9'
        인 경우 '-'가 출력되도록 설정하면 됨.
        그러나 33, 66, 99와 같은 경우는?
            1. 단순히 3의 배수면될까?
                -> 12, 15 등은 해당하지 않는다.
                -> 숫자에 3 , 6, 9가 포함되어야한다.
            2. 그렇다면 in 연산자는?
                2-1. 3 in 36과 같이 정수를 대상으로 in 연산자를 쓸 수 없음
                2-2. 그럼 number을 문자열로 바꾸면?
                    -> '3' in '36' 인 경우.
                    -> 3이 36에 포함되므로 '-'를 출력할 수 있음.
                    -> 단, 36은 두번이므로 '--'가 출력되어야 함.
            3. 방법은 각 정수 number을 문자열로 바꾼뒤, 그 문자열을 다시 순회한다.
                3-1. 아래와 같이 순회하도록 한다.
                    for num in number:
                        if num == '3' or num == '6' or num == '9':
                            print('-')
                -> 코드가 실행되는 원리는 다음과 같다.
                    number = '1' 인 경우, 문자열은 순회가능 하므로 
                    num에 '1'이 할당된다.
                    num == 3 or ... 등에 부합하지 않으므로 pass
                    
                    number = '3' 인 경우 마찬가지로
                    num에 '3'이 할당되고
                    num == 3 에 부합하므로 '-'가 출력된다.
                    
                    number = '36' 이라면?
    '''
    count = 0   # number에서 3, 6, 9가 출현한 횟수 기록
    for num in str(number):     # number를 문자열로 변환한뒤
        # # 3-1 까지 작성한 코드
        # if num == '3' or num == '6' or num == '9':
        #     print('-')
        '''
            3-2. number가 '36'인 경우
                -> num에 우선 3이 할당되어 '-'가 출력된다.
                -> 그리고 number를 모두 순회하기 위해
                -> num에 6이 할당되어 '-'가 다음줄에 출력된다.
                    ※ 다음 줄에 출력된다...
                -> number가 369이면 아래처럼 된다. 
                    '-'
                    '-'
                    '-'
                -> 우리가 원하는 것은 369에 대해서 한 번에 출력되길 원한다.
            4. 그렇다면 이번 number에 대해서 몇번의 '-'가 출력되어야 하는지 센다면?
                -> number가 '369' 라면, '3', '6', '9' 3번 출력
                -> 해당 횟수를 세어보자
                if num == '3' or num == '6' ...
                    count += 1
                -> 그리고 '-'를 count의 수 만큼 곱해서 출력 
                4-1. 주의)
                    count 변수의 초기화 위치는?
                    매 number 마다 수를 세어야 하므로
                    매번 number가 바뀌기 직전인 
                    42번째 줄 위에 작성한다.
                4-2. 참고)
                    '-' * count 에서 count가 0이라면
                    ''  빈문자열이 된다.
        '''
        # 주의!!!
        # 주의!!!!
        # number를 순회해서 얻는 3, 6, 9는 문자열이다.
        # 3 != '3' 이다!
        if num == '3' or num == '6' or num == '9':
            count += 1
        # print('-' * count)
        '''
            이제 3, 6, 9에 대한 처리는 끝이났다.
            그러나 3, 6, 9 외에 대해서는? 
            5. 그냥 number를 출력한다.
                5-1. 대신, 출력 될 위치를 잘 선정하여야 한다.
                5-2 각 값들은 언제 출력 되어야 할까?
                    number를 순회하면서 누적시킨 count는 모든 순회가 완료된 뒤에 출력한다.
                    number가 2자리수 이상이여도, number는 그대로 출력되어야한다.
                    -> 즉, 순회중인 num과는 무관하다. 
            6. 그럼 언제는 '-' * count를, 언제는 number가 출력되어야 할까?
                6-1. count가 0이라면? number에 3, 6, 9가 한 개도 포함되지 않았다는 뜻
        '''
    # number의 각 값을 모두 순회하여서, 3, 6, 9의 개수를 센 다음
    if count == 0:  # 한 개도 포함되지 않는다면,
        print(number, end=' ')  # number를 그대로 출력
    else:   # 1개 이상이라면
        print('-' * count, end=' ') # 박수 소리를 count 수 만큼 출력
    '''
        end=' ' ?
        print 함수는 end 매개변수를 가지고 있고,
        해당 변수의 default 값은 '\n' 으로 escape 문자열 줄 바꿈에 해당한다.
        우리는 다음줄 출력이 아니라, 한 칸 공백 옆에 이어서 출력할 것이므로... 
    '''

